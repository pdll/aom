"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3892],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),d=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=d(e.components);return o.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},c=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=d(n),m=r,h=c["".concat(l,".").concat(m)]||c[m]||p[m]||a;return n?o.createElement(h,i(i({ref:t},u),{},{components:n})):o.createElement(h,i({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=c;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var d=2;d<a;d++)i[d]=n[d];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}c.displayName="MDXCreateElement"},9321:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return d},toc:function(){return u},default:function(){return c}});var o=n(7462),r=n(3366),a=(n(7294),n(3905)),i=["components"],s={title:"Working with Koa",sidebar_position:1},l="aom/koa",d={unversionedId:"api/koa/index",id:"api/koa/index",isDocsHomePage:!1,title:"Working with Koa",description:"At the present time realised the functionality based on http-framework",source:"@site/docs/api/koa/index.md",sourceDirName:"api/koa",slug:"/api/koa/index",permalink:"/docs/api/koa/index",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Working with Koa",sidebar_position:1},sidebar:"api",previous:{title:"Introduction",permalink:"/docs/api/intro"},next:{title:"Endpoints decorators",permalink:"/docs/api/koa/endpoints"}},u=[{value:"How does this works",id:"how-does-this-works",children:[]}],p={toc:u};function c(e){var t=e.components,n=(0,r.Z)(e,i);return(0,a.kt)("wrapper",(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"aomkoa"},"aom/koa"),(0,a.kt)("p",null,"At the present time realised the functionality based on http-framework\n",(0,a.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/koa"},(0,a.kt)("inlineCode",{parentName:"a"},"koa@2")),"."),(0,a.kt)("p",null,"The construction of a route map is using a set of decorators that differ in types:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Controller")," is a class decorator that defines a route node and carries out the transfer\nof decorated data in case of inheritance of route nodes"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"endpoints")," - to indicate the endpoints of the route. Includes decorators:\n",(0,a.kt)("inlineCode",{parentName:"li"},"Endpoint"),",",(0,a.kt)("inlineCode",{parentName:"li"},"Get"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"Post"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"Patch"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"Put"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"Options"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"Delete"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"All")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"middlewares"),' - to indicate middleware-functions, "bridges" and expansion of the context.\nThe list includes to itself: ',(0,a.kt)("inlineCode",{parentName:"li"},"Middleware"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"Use"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"Bridge"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"Marker")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"UseNext")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"parameters")," - for parameterization of incoming arguments, used to get typical or\nspecialized values \u200b\u200binto middlewares or endpoints functions. The list includes but\nnot limited to these values: ",(0,a.kt)("inlineCode",{parentName:"li"},"Args"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"Ctx"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"Body"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"Query"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"Session"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"State"),",\n",(0,a.kt)("inlineCode",{parentName:"li"},"Headers"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"Param"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"Files"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"Next"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"Req"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"Res"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"Route"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"Cursor"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"StateMap"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"This"),".\nIt is also possible to create your own argument decorators to implement special logics.")),(0,a.kt)("p",null,"The code sample with ",(0,a.kt)("inlineCode",{parentName:"p"},"aom/koa")," decorators:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'@Bridge("/auth", Auth)\n@Bridge("/shop", Shop)\n@Bridge("/account", Account)\n@Controller()\nclass Root {\n  @Get()\n  static Index() {\n    return models.Settings.findOne({ enabled: true });\n  }\n}\n\n// ...\n@Controller()\nclass Auth {\n  user: models.Users;\n  login: models.UserLogins;\n  token: models.AuthTokens;\n\n  @Middleware()\n  static async Required(\n    @Headers("authorization") token,\n    @This() _this: Auth,\n    @Next() next,\n    @Err() err\n  ) {\n    const authToken = await models.AuthTokens.checkToken(token);\n    if (authData) {\n      _this.token = authToken;\n      _this.user = await models.Users.findById(authToken.userId);\n      _this.login = await models.UserLogins.findById(authToken.loginId);\n      return next();\n    } else {\n      return err("access denied", 403);\n    }\n  }\n\n  @Post()\n  static async Login(@Body() { login, password }, @Err() err) {\n    const authLogin = await models.UserLogins.authLogin(login, password);\n    if (checkLogin) {\n      return models.AuthTokens.generateToken(authLogin);\n    } else {\n      return err("wrong login", 403);\n    }\n  }\n}\n\n// ...\n@Controller()\nclass Shop {\n  @Get()\n  static Index(@Query() query) {\n    return models.Products.find({ ...query });\n  }\n\n  @Get("/categories")\n  static Categories(@Query() query) {\n    return models.Categories.find({ ...query });\n  }\n\n  @Get("/brands")\n  static Brands(@Query() query) {\n    return models.Brands.find({ ...query });\n  }\n\n  @Post("/add_to_cart")\n  @Use(Auth.Required)\n  static AddToCart(@Body() { productId, quantity }, @StateMap(Auth) { user }: Auth) {\n    const addUserCart = await user.addProductToCart(productId, quantity);\n    return user.getProductsCart();\n  }\n}\n\n// ...\n@Controller()\n@Use(Auth.Required)\nclass Account {\n  @Get()\n  static async Index(@StateMap(Auth) { user, login }: Auth) {\n    const orders = await user.getOrders();\n    return { user, login, orders };\n  }\n\n  @Post("/logout")\n  static async Logout(@StateMap(Auth) { token }: Auth) {\n    await token.remove();\n    return { message: "success logout" };\n  }\n}\n')),(0,a.kt)("p",null,'The above code replaces the need to use the "classic" route list with appropriate restrictions\nin the middlewares arguments (the ability to use only ',(0,a.kt)("inlineCode",{parentName:"p"},"async (ctx, next) => {...}"),"):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'router.get("/", Root.Index);\nrouter.post("/auth", Auth.Login);\nrouter.get("/shop", Shop.Index);\nrouter.get("/shop/categories", Shop.Categories);\nrouter.get("/shop/brands", Shop.Brands);\nrouter.post("/shop/add_to_cart", Auth.Required, Shop.AddToCart);\nrouter.get("/account", Auth.Required, Account.Index);\nrouter.post("/account/logout", Auth.Required, Account.Logout);\n')),(0,a.kt)("p",null,"Other advantages of this approach consist in the ability to use additional decorators that allows you\nto compose autodocumentation in the format ",(0,a.kt)("a",{parentName:"p",href:"../openapi/index"},(0,a.kt)("inlineCode",{parentName:"a"},"OpenApi")),", and to have more\nstructured and understandable code, convenient for refactoring and data control."),(0,a.kt)("h2",{id:"how-does-this-works"},"How does this works"),(0,a.kt)("p",null,"A route node - is a class responsible for a local fragment of a route map. All elements of the route\nnode become available after it is connected to another node."),(0,a.kt)("p",null,"Use the ",(0,a.kt)("inlineCode",{parentName:"p"},"@Controller")," decorator for the route node. In general, it is optional, and only\nrequired if you are creating a route node by inheriting from another route node. More on this\nin the section ",(0,a.kt)("a",{parentName:"p",href:"./inherits"},(0,a.kt)("inlineCode",{parentName:"a"},"Inheritance")),"."),(0,a.kt)("p",null,"After assembly, route nodes unfolds in a sequence of ",(0,a.kt)("inlineCode",{parentName:"p"},"middleware")," functions, which ends by the final\n",(0,a.kt)("inlineCode",{parentName:"p"},"endpoint"),", thereby creating a complete structure of all routes, described in communication nodes."),(0,a.kt)("p",null,"Route nodes are created so that their elements can be reused in other parts of the routes, including\nanother api-services."),(0,a.kt)("p",null,"All ",(0,a.kt)("inlineCode",{parentName:"p"},"endpoint"),"-, ",(0,a.kt)("inlineCode",{parentName:"p"},"middleware"),"- and ",(0,a.kt)("inlineCode",{parentName:"p"},"bridge"),"-functions are created above the static methods of the class,\nwhile the methods and properties of instances can be applied as contextual data items, which accessed\nvia decorators ",(0,a.kt)("a",{parentName:"p",href:"./parameters#statemap"},(0,a.kt)("inlineCode",{parentName:"a"},"StateMap"))," and ",(0,a.kt)("a",{parentName:"p",href:"./parameters#this"},(0,a.kt)("inlineCode",{parentName:"a"},"This")),"."),(0,a.kt)("p",null,"The routing node does not have its own path address, and can be connected to another node\nvia the custom prefix value or parameter, using bridges ",(0,a.kt)("inlineCode",{parentName:"p"},"@Bridge")),(0,a.kt)("p",null,"The collection of nodes and connections between them creates a route map, which can be entirely or\nfragmentarily applied to ",(0,a.kt)("inlineCode",{parentName:"p"},"koa-router")," (or one of its variants) to create the required set of routes\nin the context of the ",(0,a.kt)("inlineCode",{parentName:"p"},"koa")," application. At the end of assembly the routes nodes forms isolated\nchains of functions ",(0,a.kt)("inlineCode",{parentName:"p"},"(ctx, next) => {...}"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"router[method](url, ...[Route1.Middleware1, Route2.Middleware2, Route3.Bridge, Route4.Endpoint]);\n")),(0,a.kt)("p",null,"Connecting route nodes to the server on ",(0,a.kt)("inlineCode",{parentName:"p"},"koa")," is as follows:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'import koa from "koa";\nimport koaRouter from "koa-router";\nimport { $ } from "aom"; // assembler of routes map\nimport Index from "./routes"; // root route node\n\nconst app = new koa();\nconst router = new router();\n\n// initiate the assembly of routes: the first argument is the root node, the second is the prefix\n// a custom route node can be used as a root node\n// in this case, only those links will be activated that are connected directly with it\n// prefix allows you to set a common prefix for all addresses on the route,\n// for example `/ v1` to specify API versioning, by default` / `,\nexport const $aom = new $(Index, "/");\n\n// get a list of addresses, methods and middlewares functions\n// collection of [{method: string, path: string, middlewares: Function []}]\n\n// apply the routes to the koa-router instance\n$aom.routes.forEach(({ method, path, middlewares }) => {\n  router[method](path, ...middlewares);\n});\n\n// alternative way: pass to the handler method using the same values\n// and apply them to the used router\n$aom.eachRoute(({ method, path, middlewares }) => {\n  router[method](path, ...middlewares);\n});\n\n// transfer data from the router to the server\napp.use(router.routes()).use(router.allowedMethods());\n\n// run server on neccessary port\napp.listen(3000);\n')),(0,a.kt)("p",null,"If necessary, you can use other ",(0,a.kt)("inlineCode",{parentName:"p"},"koa")," stack libraries, creating the necessary middleware before\nor after connecting routes on the ",(0,a.kt)("inlineCode",{parentName:"p"},"aom/koa")," decorators."))}c.isMDXComponent=!0}}]);